on init
    #create mountpoint for /mnt/vendor/persist partition
    mkdir /mnt/vendor/persist 0771 system system

on post-fs
    chown system system /mnt/vendor/persist
    chmod 0771 /mnt/vendor/persist

    # We restorecon /mnt/vendor/persist to set SEPolicy label.
    restorecon /mnt/vendor/persist

    # Create mcRegistry to store failure record
    mkdir /mnt/vendor/persist/thh/ta 0771 system system
    mkdir /mnt/vendor/persist/paytrigger
    chown system system /mnt/vendor/persist/paytrigger
    chmod 0777 /mnt/vendor/persist/paytrigger

    #BSP: Create startPara for anti-crack by xiaolin.wu 20231225 start
    mkdir /mnt/vendor/persist/startPara
    chown system system /mnt/vendor/persist/startPara
    chmod 0777 /mnt/vendor/persist/startPara
    mkdir /tranfs/startPara
    chown system system /tranfs/startPara
    chmod 0777 /tranfs/startPara
    #BSP: Create startPara for anti-crack by xiaolin.wu 20231225 end

on post-fs-data
    # Create /data/vendor/key_provisioning dir and get proper encryption policy installed
    # Key Installation
    mkdir /data/vendor/key_provisioning 0771 system system

# For META/FACTORY mode
on property:ro.crypto.state=unencrypted
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta ++ (unencrypted)"
    mkdir /data/vendor/thh/ta 0775 system system
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta -- (unencrypted)"

# Normal mode, FBE
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta ++ (FBE encrypted)"
    mkdir /data/vendor/thh/ta 0775 system system
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta -- (FBE encrypted)"

# Normal mode, FDE
on property:vold.decrypt=trigger_restart_framework
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta ++ (FDE encrypted)"
    mkdir /data/vendor/thh/ta 0775 system system
    write /proc/bootprof "teei_daemon_v2: create /data/vendor/thh/ta -- (FDE encrypted)"